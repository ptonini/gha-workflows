{
  "version": 4,
  "terraform_version": "1.3.0",
  "serial": 200,
  "lineage": "bd738847-cc6f-ea64-c711-705173d885b2",
  "outputs": {},
  "resources": [
    {
      "module": "module.workflow_apply_helm_collection",
      "mode": "data",
      "type": "github_repository",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "ingress-configs",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/ingress-configs",
            "git_clone_url": "git://github.com/nodis-com-br/ingress-configs.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/ingress-configs",
            "http_clone_url": "https://github.com/nodis-com-br/ingress-configs.git",
            "id": "ingress-configs",
            "name": "ingress-configs",
            "node_id": "R_kgDOIEy6VQ",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 541899349,
            "ssh_clone_url": "git@github.com:nodis-com-br/ingress-configs.git",
            "svn_url": "https://github.com/nodis-com-br/ingress-configs",
            "topics": [
              "github-flow",
              "helm-collection"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.workflow_apply_helm_collection",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "ingress-configs",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/apply.yml created/modified by terraform [skip ci]",
            "commit_sha": "8546210529332e01d748b686e158a60488d34c50",
            "content": "name: apply-helm-collection\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  changes:\n    runs-on: ubuntu-latest\n    outputs:\n      releases: ${{ steps.filter.outputs.changes }}\n    steps:\n      - run: env | sort\n      - run: jq . ${{ github.event_path }}\n      - uses: actions/checkout@main\n      - uses: dorny/paths-filter@v2\n        id: filter\n        with:\n          filters: |\n            backoffice_default_bots: backoffice/default/bots\n  build:\n    needs: changes\n    strategy:\n      matrix:\n        release: ${{ fromJSON(needs.changes.outputs.releases) }}\n    runs-on: ubuntu-latest\n    steps:\n      - run: env | sort\n      - uses: actions/checkout@v2\n      - run: echo \"ENVIRONMENT=$(echo ${{ matrix.release }} | awk -F_ '{ print $1}')\" \u003e\u003e $GITHUB_ENV\n      - run: echo \"NAMESPACE=$(echo ${{ matrix.release }} | awk -F_ '{ print $2}')\" \u003e\u003e $GITHUB_ENV\n      - run: echo \"RELEASE=$(echo ${{ matrix.release }} | awk -F_ '{ print $3}')\" \u003e\u003e $GITHUB_ENV\n      - run: echo \"VAULT_K8S_ROLE_PATH=$(echo ${{ secrets.ORG_CONFIG }} | jq -r '.environments'${ENVIRONMENT}'.vault_role_path')\" \u003e\u003e $GITHUB_ENV\n      - uses: ptonini/gha-openvpn@main\n        with:\n          openvpn_config: ${{ secrets.OPENVPN_CONFIG }}\n          validation_addr: ${{ secrets.VAULT_ADDR }}\n      - uses: hashicorp/vault-action@v2.3.0\n        with:\n          method: approle\n          url: ${{ secrets.VAULT_ADDR }}\n          roleId: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n          secretId: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n          secrets: ${{ env.VAULT_K8S_ROLE_PATH }} kube_config | KUBECONFIG_CONTENT;\n      - uses: ptonini/gha-deploy-helm-releases@main\n        with:\n          base_dir: ${{ github.workspace }}/${{ env.ENVIRONMENT }}/${{ env.NAMESPACE }}\n          kubeconfig_content: ${{ env.KUBECONFIG_CONTENT }}\n          releases: ${{ env.RELEASE }}",
            "file": ".github/workflows/apply.yml",
            "id": "ingress-configs/.github/workflows/apply.yml",
            "overwrite_on_create": true,
            "repository": "ingress-configs",
            "sha": "52b3830ef67fd63f2b6c27530bfc7da575a6b53c"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_apply_helm_collection.data.github_repositories.this",
            "module.workflow_apply_helm_collection.data.github_repository.this"
          ]
        }
      ]
    },
    {
      "module": "module.workflow_configure_helm_release",
      "mode": "data",
      "type": "github_repositories",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "helm-release github-flow",
          "schema_version": 0,
          "attributes": {
            "full_names": [
              "nodis-com-br/seller_gmail_to_elastic",
              "nodis-com-br/backoffice_email_api",
              "nodis-com-br/mock_logger_api",
              "nodis-com-br/catalog_api_log_collector",
              "nodis-com-br/sc_email_report",
              "nodis-com-br/sc_email_forward",
              "nodis-com-br/spa_lojista_prod_to_report",
              "nodis-com-br/scrapper_to_elastic",
              "nodis-com-br/discord_bot_api"
            ],
            "id": "helm-release github-flow in:topics org:nodis-com-br archived:false",
            "names": [
              "seller_gmail_to_elastic",
              "backoffice_email_api",
              "mock_logger_api",
              "catalog_api_log_collector",
              "sc_email_report",
              "sc_email_forward",
              "spa_lojista_prod_to_report",
              "scrapper_to_elastic",
              "discord_bot_api"
            ],
            "query": "helm-release github-flow in:topics org:nodis-com-br archived:false",
            "sort": "updated"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.workflow_configure_helm_release",
      "mode": "data",
      "type": "github_repository",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "backoffice_email_api",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/backoffice_email_api",
            "git_clone_url": "git://github.com/nodis-com-br/backoffice_email_api.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/backoffice_email_api",
            "http_clone_url": "https://github.com/nodis-com-br/backoffice_email_api.git",
            "id": "backoffice_email_api",
            "name": "backoffice_email_api",
            "node_id": "R_kgDOGv4J6A",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 452856296,
            "ssh_clone_url": "git@github.com:nodis-com-br/backoffice_email_api.git",
            "svn_url": "https://github.com/nodis-com-br/backoffice_email_api",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "catalog_api_log_collector",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              },
              {
                "name": "release-please--branches--master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/catalog_api_log_collector",
            "git_clone_url": "git://github.com/nodis-com-br/catalog_api_log_collector.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/catalog_api_log_collector",
            "http_clone_url": "https://github.com/nodis-com-br/catalog_api_log_collector.git",
            "id": "catalog_api_log_collector",
            "name": "catalog_api_log_collector",
            "node_id": "R_kgDOHrVZTQ",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 515201357,
            "ssh_clone_url": "git@github.com:nodis-com-br/catalog_api_log_collector.git",
            "svn_url": "https://github.com/nodis-com-br/catalog_api_log_collector",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "discord_bot_api",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "master",
                "protected": false
              },
              {
                "name": "new-test",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/discord_bot_api",
            "git_clone_url": "git://github.com/nodis-com-br/discord_bot_api.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/discord_bot_api",
            "http_clone_url": "https://github.com/nodis-com-br/discord_bot_api.git",
            "id": "discord_bot_api",
            "name": "discord_bot_api",
            "node_id": "R_kgDOHHZBeg",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 477512058,
            "ssh_clone_url": "git@github.com:nodis-com-br/discord_bot_api.git",
            "svn_url": "https://github.com/nodis-com-br/discord_bot_api",
            "topics": [
              "bots-app",
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "mock_logger_api",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/mock_logger_api",
            "git_clone_url": "git://github.com/nodis-com-br/mock_logger_api.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/mock_logger_api",
            "http_clone_url": "https://github.com/nodis-com-br/mock_logger_api.git",
            "id": "mock_logger_api",
            "name": "mock_logger_api",
            "node_id": "MDEwOlJlcG9zaXRvcnk0MDcyNTI1ODk=",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 407252589,
            "ssh_clone_url": "git@github.com:nodis-com-br/mock_logger_api.git",
            "svn_url": "https://github.com/nodis-com-br/mock_logger_api",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "sc_email_forward",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "Automação e-mails comunicação SC.",
            "full_name": "nodis-com-br/sc_email_forward",
            "git_clone_url": "git://github.com/nodis-com-br/sc_email_forward.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/sc_email_forward",
            "http_clone_url": "https://github.com/nodis-com-br/sc_email_forward.git",
            "id": "sc_email_forward",
            "name": "sc_email_forward",
            "node_id": "R_kgDOHGt9Vg",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 476806486,
            "ssh_clone_url": "git@github.com:nodis-com-br/sc_email_forward.git",
            "svn_url": "https://github.com/nodis-com-br/sc_email_forward",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "sc_email_report",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/sc_email_report",
            "git_clone_url": "git://github.com/nodis-com-br/sc_email_report.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/sc_email_report",
            "http_clone_url": "https://github.com/nodis-com-br/sc_email_report.git",
            "id": "sc_email_report",
            "name": "sc_email_report",
            "node_id": "R_kgDOGWmxsQ",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 426357169,
            "ssh_clone_url": "git@github.com:nodis-com-br/sc_email_report.git",
            "svn_url": "https://github.com/nodis-com-br/sc_email_report",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "scrapper_to_elastic",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              },
              {
                "name": "release-please--branches--master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/scrapper_to_elastic",
            "git_clone_url": "git://github.com/nodis-com-br/scrapper_to_elastic.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/scrapper_to_elastic",
            "http_clone_url": "https://github.com/nodis-com-br/scrapper_to_elastic.git",
            "id": "scrapper_to_elastic",
            "name": "scrapper_to_elastic",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNDE2NDUzMzM=",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 341645333,
            "ssh_clone_url": "git@github.com:nodis-com-br/scrapper_to_elastic.git",
            "svn_url": "https://github.com/nodis-com-br/scrapper_to_elastic",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "seller_gmail_to_elastic",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/seller_gmail_to_elastic",
            "git_clone_url": "git://github.com/nodis-com-br/seller_gmail_to_elastic.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/seller_gmail_to_elastic",
            "http_clone_url": "https://github.com/nodis-com-br/seller_gmail_to_elastic.git",
            "id": "seller_gmail_to_elastic",
            "name": "seller_gmail_to_elastic",
            "node_id": "MDEwOlJlcG9zaXRvcnk0MDAyMDAyNDI=",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 400200242,
            "ssh_clone_url": "git@github.com:nodis-com-br/seller_gmail_to_elastic.git",
            "svn_url": "https://github.com/nodis-com-br/seller_gmail_to_elastic",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "spa_lojista_prod_to_report",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              },
              {
                "name": "release-please--branches--master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "The intent of this repo is to transfer all the tables available on both of these schemas to the report database.",
            "full_name": "nodis-com-br/spa_lojista_prod_to_report",
            "git_clone_url": "git://github.com/nodis-com-br/spa_lojista_prod_to_report.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/spa_lojista_prod_to_report",
            "http_clone_url": "https://github.com/nodis-com-br/spa_lojista_prod_to_report.git",
            "id": "spa_lojista_prod_to_report",
            "name": "spa_lojista_prod_to_report",
            "node_id": "R_kgDOHTuGPQ",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 490440253,
            "ssh_clone_url": "git@github.com:nodis-com-br/spa_lojista_prod_to_report.git",
            "svn_url": "https://github.com/nodis-com-br/spa_lojista_prod_to_report",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.workflow_configure_helm_release",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "backoffice_email_api",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/configure.yml created/modified by terraform [skip ci]",
            "commit_sha": "2ca310d5fb0a19eed413c7c26101332ee7386c1b",
            "content": "name: configure\n\nconcurrency:\n  group: configure\n\non:\n  workflow_dispatch: ~\n\njobs:\n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  apply_helm_release:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  ",
            "file": ".github/workflows/configure.yml",
            "id": "backoffice_email_api/.github/workflows/configure.yml",
            "overwrite_on_create": true,
            "repository": "backoffice_email_api",
            "sha": "01cd23234a7a05ea02f6ff3b5e0cd14522a3262e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_configure_helm_release.data.github_repositories.this",
            "module.workflow_configure_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "catalog_api_log_collector",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/configure.yml created/modified by terraform [skip ci]",
            "commit_sha": "8d99b80d83c2356a688e3b4b5c764e7264ac42f2",
            "content": "name: configure\n\nconcurrency:\n  group: configure\n\non:\n  workflow_dispatch: ~\n\njobs:\n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  apply_helm_release:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  ",
            "file": ".github/workflows/configure.yml",
            "id": "catalog_api_log_collector/.github/workflows/configure.yml",
            "overwrite_on_create": true,
            "repository": "catalog_api_log_collector",
            "sha": "01cd23234a7a05ea02f6ff3b5e0cd14522a3262e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_configure_helm_release.data.github_repositories.this",
            "module.workflow_configure_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "discord_bot_api",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/configure.yml created/modified by terraform [skip ci]",
            "commit_sha": "655ab86ba6c9b0d10f98ae1e7dd12298e940bd73",
            "content": "name: configure\n\nconcurrency:\n  group: configure\n\non:\n  workflow_dispatch: ~\n\njobs:\n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  apply_helm_release:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  ",
            "file": ".github/workflows/configure.yml",
            "id": "discord_bot_api/.github/workflows/configure.yml",
            "overwrite_on_create": true,
            "repository": "discord_bot_api",
            "sha": "01cd23234a7a05ea02f6ff3b5e0cd14522a3262e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_configure_helm_release.data.github_repositories.this",
            "module.workflow_configure_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "mock_logger_api",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/configure.yml created/modified by terraform [skip ci]",
            "commit_sha": "a568b35a74c86d6b3ba7caec5b2dd9d199906c1b",
            "content": "name: configure\n\nconcurrency:\n  group: configure\n\non:\n  workflow_dispatch: ~\n\njobs:\n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  apply_helm_release:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  ",
            "file": ".github/workflows/configure.yml",
            "id": "mock_logger_api/.github/workflows/configure.yml",
            "overwrite_on_create": true,
            "repository": "mock_logger_api",
            "sha": "01cd23234a7a05ea02f6ff3b5e0cd14522a3262e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_configure_helm_release.data.github_repositories.this",
            "module.workflow_configure_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "sc_email_forward",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/configure.yml created/modified by terraform [skip ci]",
            "commit_sha": "a9415b05de31d3bc9b07fa95647ee9e42a3c296b",
            "content": "name: configure\n\nconcurrency:\n  group: configure\n\non:\n  workflow_dispatch: ~\n\njobs:\n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  apply_helm_release:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  ",
            "file": ".github/workflows/configure.yml",
            "id": "sc_email_forward/.github/workflows/configure.yml",
            "overwrite_on_create": true,
            "repository": "sc_email_forward",
            "sha": "01cd23234a7a05ea02f6ff3b5e0cd14522a3262e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_configure_helm_release.data.github_repositories.this",
            "module.workflow_configure_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "sc_email_report",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/configure.yml created/modified by terraform [skip ci]",
            "commit_sha": "71ad3dd9f8863000b229354f4c3fccc70eca954e",
            "content": "name: configure\n\nconcurrency:\n  group: configure\n\non:\n  workflow_dispatch: ~\n\njobs:\n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  apply_helm_release:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  ",
            "file": ".github/workflows/configure.yml",
            "id": "sc_email_report/.github/workflows/configure.yml",
            "overwrite_on_create": true,
            "repository": "sc_email_report",
            "sha": "01cd23234a7a05ea02f6ff3b5e0cd14522a3262e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_configure_helm_release.data.github_repositories.this",
            "module.workflow_configure_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "scrapper_to_elastic",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/configure.yml created/modified by terraform [skip ci]",
            "commit_sha": "60c21a7a4258c0a83b013b7d514716c2fcef823a",
            "content": "name: configure\n\nconcurrency:\n  group: configure\n\non:\n  workflow_dispatch: ~\n\njobs:\n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  apply_helm_release:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  ",
            "file": ".github/workflows/configure.yml",
            "id": "scrapper_to_elastic/.github/workflows/configure.yml",
            "overwrite_on_create": true,
            "repository": "scrapper_to_elastic",
            "sha": "01cd23234a7a05ea02f6ff3b5e0cd14522a3262e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_configure_helm_release.data.github_repositories.this",
            "module.workflow_configure_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "seller_gmail_to_elastic",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/configure.yml created/modified by terraform [skip ci]",
            "commit_sha": "9aa3c84f8adb7e7e35674e372e6a05aea7140362",
            "content": "name: configure\n\nconcurrency:\n  group: configure\n\non:\n  workflow_dispatch: ~\n\njobs:\n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  apply_helm_release:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  ",
            "file": ".github/workflows/configure.yml",
            "id": "seller_gmail_to_elastic/.github/workflows/configure.yml",
            "overwrite_on_create": true,
            "repository": "seller_gmail_to_elastic",
            "sha": "01cd23234a7a05ea02f6ff3b5e0cd14522a3262e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_configure_helm_release.data.github_repositories.this",
            "module.workflow_configure_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "spa_lojista_prod_to_report",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/configure.yml created/modified by terraform [skip ci]",
            "commit_sha": "4db8d2e35fff6e3f73bcd2a380bb76db63839384",
            "content": "name: configure\n\nconcurrency:\n  group: configure\n\non:\n  workflow_dispatch: ~\n\njobs:\n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  apply_helm_release:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  ",
            "file": ".github/workflows/configure.yml",
            "id": "spa_lojista_prod_to_report/.github/workflows/configure.yml",
            "overwrite_on_create": true,
            "repository": "spa_lojista_prod_to_report",
            "sha": "01cd23234a7a05ea02f6ff3b5e0cd14522a3262e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_configure_helm_release.data.github_repositories.this",
            "module.workflow_configure_helm_release.data.github_repository.this"
          ]
        }
      ]
    },
    {
      "module": "module.workflow_deploy_helm_release",
      "mode": "data",
      "type": "github_repositories",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "helm-release github-flow",
          "schema_version": 0,
          "attributes": {
            "full_names": [
              "nodis-com-br/seller_gmail_to_elastic",
              "nodis-com-br/backoffice_email_api",
              "nodis-com-br/mock_logger_api",
              "nodis-com-br/catalog_api_log_collector",
              "nodis-com-br/sc_email_report",
              "nodis-com-br/sc_email_forward",
              "nodis-com-br/spa_lojista_prod_to_report",
              "nodis-com-br/scrapper_to_elastic",
              "nodis-com-br/discord_bot_api"
            ],
            "id": "helm-release github-flow in:topics org:nodis-com-br archived:false",
            "names": [
              "seller_gmail_to_elastic",
              "backoffice_email_api",
              "mock_logger_api",
              "catalog_api_log_collector",
              "sc_email_report",
              "sc_email_forward",
              "spa_lojista_prod_to_report",
              "scrapper_to_elastic",
              "discord_bot_api"
            ],
            "query": "helm-release github-flow in:topics org:nodis-com-br archived:false",
            "sort": "updated"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.workflow_deploy_helm_release",
      "mode": "data",
      "type": "github_repository",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "backoffice_email_api",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/backoffice_email_api",
            "git_clone_url": "git://github.com/nodis-com-br/backoffice_email_api.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/backoffice_email_api",
            "http_clone_url": "https://github.com/nodis-com-br/backoffice_email_api.git",
            "id": "backoffice_email_api",
            "name": "backoffice_email_api",
            "node_id": "R_kgDOGv4J6A",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 452856296,
            "ssh_clone_url": "git@github.com:nodis-com-br/backoffice_email_api.git",
            "svn_url": "https://github.com/nodis-com-br/backoffice_email_api",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "catalog_api_log_collector",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              },
              {
                "name": "release-please--branches--master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/catalog_api_log_collector",
            "git_clone_url": "git://github.com/nodis-com-br/catalog_api_log_collector.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/catalog_api_log_collector",
            "http_clone_url": "https://github.com/nodis-com-br/catalog_api_log_collector.git",
            "id": "catalog_api_log_collector",
            "name": "catalog_api_log_collector",
            "node_id": "R_kgDOHrVZTQ",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 515201357,
            "ssh_clone_url": "git@github.com:nodis-com-br/catalog_api_log_collector.git",
            "svn_url": "https://github.com/nodis-com-br/catalog_api_log_collector",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "discord_bot_api",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "master",
                "protected": false
              },
              {
                "name": "new-test",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/discord_bot_api",
            "git_clone_url": "git://github.com/nodis-com-br/discord_bot_api.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/discord_bot_api",
            "http_clone_url": "https://github.com/nodis-com-br/discord_bot_api.git",
            "id": "discord_bot_api",
            "name": "discord_bot_api",
            "node_id": "R_kgDOHHZBeg",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 477512058,
            "ssh_clone_url": "git@github.com:nodis-com-br/discord_bot_api.git",
            "svn_url": "https://github.com/nodis-com-br/discord_bot_api",
            "topics": [
              "bots-app",
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "mock_logger_api",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/mock_logger_api",
            "git_clone_url": "git://github.com/nodis-com-br/mock_logger_api.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/mock_logger_api",
            "http_clone_url": "https://github.com/nodis-com-br/mock_logger_api.git",
            "id": "mock_logger_api",
            "name": "mock_logger_api",
            "node_id": "MDEwOlJlcG9zaXRvcnk0MDcyNTI1ODk=",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 407252589,
            "ssh_clone_url": "git@github.com:nodis-com-br/mock_logger_api.git",
            "svn_url": "https://github.com/nodis-com-br/mock_logger_api",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "sc_email_forward",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "Automação e-mails comunicação SC.",
            "full_name": "nodis-com-br/sc_email_forward",
            "git_clone_url": "git://github.com/nodis-com-br/sc_email_forward.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/sc_email_forward",
            "http_clone_url": "https://github.com/nodis-com-br/sc_email_forward.git",
            "id": "sc_email_forward",
            "name": "sc_email_forward",
            "node_id": "R_kgDOHGt9Vg",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 476806486,
            "ssh_clone_url": "git@github.com:nodis-com-br/sc_email_forward.git",
            "svn_url": "https://github.com/nodis-com-br/sc_email_forward",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "sc_email_report",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/sc_email_report",
            "git_clone_url": "git://github.com/nodis-com-br/sc_email_report.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/sc_email_report",
            "http_clone_url": "https://github.com/nodis-com-br/sc_email_report.git",
            "id": "sc_email_report",
            "name": "sc_email_report",
            "node_id": "R_kgDOGWmxsQ",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 426357169,
            "ssh_clone_url": "git@github.com:nodis-com-br/sc_email_report.git",
            "svn_url": "https://github.com/nodis-com-br/sc_email_report",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "scrapper_to_elastic",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              },
              {
                "name": "release-please--branches--master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/scrapper_to_elastic",
            "git_clone_url": "git://github.com/nodis-com-br/scrapper_to_elastic.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/scrapper_to_elastic",
            "http_clone_url": "https://github.com/nodis-com-br/scrapper_to_elastic.git",
            "id": "scrapper_to_elastic",
            "name": "scrapper_to_elastic",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNDE2NDUzMzM=",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 341645333,
            "ssh_clone_url": "git@github.com:nodis-com-br/scrapper_to_elastic.git",
            "svn_url": "https://github.com/nodis-com-br/scrapper_to_elastic",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "seller_gmail_to_elastic",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/seller_gmail_to_elastic",
            "git_clone_url": "git://github.com/nodis-com-br/seller_gmail_to_elastic.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/seller_gmail_to_elastic",
            "http_clone_url": "https://github.com/nodis-com-br/seller_gmail_to_elastic.git",
            "id": "seller_gmail_to_elastic",
            "name": "seller_gmail_to_elastic",
            "node_id": "MDEwOlJlcG9zaXRvcnk0MDAyMDAyNDI=",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 400200242,
            "ssh_clone_url": "git@github.com:nodis-com-br/seller_gmail_to_elastic.git",
            "svn_url": "https://github.com/nodis-com-br/seller_gmail_to_elastic",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "spa_lojista_prod_to_report",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              },
              {
                "name": "release-please--branches--master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "The intent of this repo is to transfer all the tables available on both of these schemas to the report database.",
            "full_name": "nodis-com-br/spa_lojista_prod_to_report",
            "git_clone_url": "git://github.com/nodis-com-br/spa_lojista_prod_to_report.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/spa_lojista_prod_to_report",
            "http_clone_url": "https://github.com/nodis-com-br/spa_lojista_prod_to_report.git",
            "id": "spa_lojista_prod_to_report",
            "name": "spa_lojista_prod_to_report",
            "node_id": "R_kgDOHTuGPQ",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 490440253,
            "ssh_clone_url": "git@github.com:nodis-com-br/spa_lojista_prod_to_report.git",
            "svn_url": "https://github.com/nodis-com-br/spa_lojista_prod_to_report",
            "topics": [
              "github-flow",
              "helm-release"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.workflow_deploy_helm_release",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "backoffice_email_api",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/deploy.yml created/modified by terraform [skip ci]",
            "commit_sha": "be83d0c767c6c10541fe7c8b4aaa5eec32ca970f",
            "content": "name: deploy\n\nconcurrency:\n  group: ${{ github.event_name }}\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n    paths-ignore:\n      - manifest.yaml\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - closed\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    if: (!contains(github.event.pull_request.head.ref, 'release-please--'))\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  publish_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/publish-docker-image.yaml@main\n    if: needs.startup.outputs.publish_candidate == 'true'\n    needs:\n      - startup\n    with:\n      tags: ${{ format('latest pr{0}', github.event.number) }}\n    secrets:\n      BUILD_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}\n  create_staging:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    if: needs.startup.outputs.create_staging == 'true'\n    needs:\n      - startup\n      - publish_candidate\n    with:\n      checksum: ${{ needs.publish_candidate.outputs.checksum }}\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n\n  destroy_staging:\n    uses: ptonini/gha-workflows/.github/workflows/destroy-staging.yaml@main\n    if: needs.startup.outputs.destroy_staging == 'true'\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  approve_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.approve_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: ${{ format('pr{0}', github.event.pull_request.number) }}\n      tag: pr-approved\n  \n  promote_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.promote_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: pr-approved\n      tag: ${{ needs.startup.outputs.release_version }}\n  deploy_to_production:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - promote_candidate\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n  \n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/deploy.yml",
            "id": "backoffice_email_api/.github/workflows/deploy.yml",
            "overwrite_on_create": true,
            "repository": "backoffice_email_api",
            "sha": "e60f89ab5eef9a6ffa8c95347f83ab74ee47900e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_deploy_helm_release.data.github_repositories.this",
            "module.workflow_deploy_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "catalog_api_log_collector",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/deploy.yml created/modified by terraform [skip ci]",
            "commit_sha": "9e8270a5e4eed380b374cfc777d85e12c9496851",
            "content": "name: deploy\n\nconcurrency:\n  group: ${{ github.event_name }}\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n    paths-ignore:\n      - manifest.yaml\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - closed\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    if: (!contains(github.event.pull_request.head.ref, 'release-please--'))\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  publish_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/publish-docker-image.yaml@main\n    if: needs.startup.outputs.publish_candidate == 'true'\n    needs:\n      - startup\n    with:\n      tags: ${{ format('latest pr{0}', github.event.number) }}\n    secrets:\n      BUILD_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}\n  create_staging:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    if: needs.startup.outputs.create_staging == 'true'\n    needs:\n      - startup\n      - publish_candidate\n    with:\n      checksum: ${{ needs.publish_candidate.outputs.checksum }}\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n\n  destroy_staging:\n    uses: ptonini/gha-workflows/.github/workflows/destroy-staging.yaml@main\n    if: needs.startup.outputs.destroy_staging == 'true'\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  approve_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.approve_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: ${{ format('pr{0}', github.event.pull_request.number) }}\n      tag: pr-approved\n  \n  promote_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.promote_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: pr-approved\n      tag: ${{ needs.startup.outputs.release_version }}\n  deploy_to_production:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - promote_candidate\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n  \n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/deploy.yml",
            "id": "catalog_api_log_collector/.github/workflows/deploy.yml",
            "overwrite_on_create": true,
            "repository": "catalog_api_log_collector",
            "sha": "e60f89ab5eef9a6ffa8c95347f83ab74ee47900e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_deploy_helm_release.data.github_repositories.this",
            "module.workflow_deploy_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "discord_bot_api",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/deploy.yml created/modified by terraform [skip ci]",
            "commit_sha": "aa4f6aeff403717e695bef8131d2596bc64f2821",
            "content": "name: deploy\n\nconcurrency:\n  group: ${{ github.event_name }}\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n    paths-ignore:\n      - manifest.yaml\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - closed\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    if: (!contains(github.event.pull_request.head.ref, 'release-please--'))\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  publish_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/publish-docker-image.yaml@main\n    if: needs.startup.outputs.publish_candidate == 'true'\n    needs:\n      - startup\n    with:\n      tags: ${{ format('latest pr{0}', github.event.number) }}\n    secrets:\n      BUILD_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}\n  create_staging:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    if: needs.startup.outputs.create_staging == 'true'\n    needs:\n      - startup\n      - publish_candidate\n    with:\n      checksum: ${{ needs.publish_candidate.outputs.checksum }}\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n\n  destroy_staging:\n    uses: ptonini/gha-workflows/.github/workflows/destroy-staging.yaml@main\n    if: needs.startup.outputs.destroy_staging == 'true'\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  approve_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.approve_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: ${{ format('pr{0}', github.event.pull_request.number) }}\n      tag: pr-approved\n  \n  promote_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.promote_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: pr-approved\n      tag: ${{ needs.startup.outputs.release_version }}\n  deploy_to_production:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - promote_candidate\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n  \n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/deploy.yml",
            "id": "discord_bot_api/.github/workflows/deploy.yml",
            "overwrite_on_create": true,
            "repository": "discord_bot_api",
            "sha": "e60f89ab5eef9a6ffa8c95347f83ab74ee47900e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_deploy_helm_release.data.github_repositories.this",
            "module.workflow_deploy_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "mock_logger_api",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/deploy.yml created/modified by terraform [skip ci]",
            "commit_sha": "722388f581c5b7bd6ff6a5351e06520b16348f0a",
            "content": "name: deploy\n\nconcurrency:\n  group: ${{ github.event_name }}\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n    paths-ignore:\n      - manifest.yaml\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - closed\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    if: (!contains(github.event.pull_request.head.ref, 'release-please--'))\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  publish_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/publish-docker-image.yaml@main\n    if: needs.startup.outputs.publish_candidate == 'true'\n    needs:\n      - startup\n    with:\n      tags: ${{ format('latest pr{0}', github.event.number) }}\n    secrets:\n      BUILD_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}\n  create_staging:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    if: needs.startup.outputs.create_staging == 'true'\n    needs:\n      - startup\n      - publish_candidate\n    with:\n      checksum: ${{ needs.publish_candidate.outputs.checksum }}\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n\n  destroy_staging:\n    uses: ptonini/gha-workflows/.github/workflows/destroy-staging.yaml@main\n    if: needs.startup.outputs.destroy_staging == 'true'\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  approve_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.approve_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: ${{ format('pr{0}', github.event.pull_request.number) }}\n      tag: pr-approved\n  \n  promote_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.promote_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: pr-approved\n      tag: ${{ needs.startup.outputs.release_version }}\n  deploy_to_production:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - promote_candidate\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n  \n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/deploy.yml",
            "id": "mock_logger_api/.github/workflows/deploy.yml",
            "overwrite_on_create": true,
            "repository": "mock_logger_api",
            "sha": "e60f89ab5eef9a6ffa8c95347f83ab74ee47900e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_deploy_helm_release.data.github_repositories.this",
            "module.workflow_deploy_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "sc_email_forward",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/deploy.yml created/modified by terraform [skip ci]",
            "commit_sha": "3e08e3f8b9b7cb3e7ee66fab7571fa9fcc0e9a4e",
            "content": "name: deploy\n\nconcurrency:\n  group: ${{ github.event_name }}\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n    paths-ignore:\n      - manifest.yaml\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - closed\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    if: (!contains(github.event.pull_request.head.ref, 'release-please--'))\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  publish_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/publish-docker-image.yaml@main\n    if: needs.startup.outputs.publish_candidate == 'true'\n    needs:\n      - startup\n    with:\n      tags: ${{ format('latest pr{0}', github.event.number) }}\n    secrets:\n      BUILD_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}\n  create_staging:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    if: needs.startup.outputs.create_staging == 'true'\n    needs:\n      - startup\n      - publish_candidate\n    with:\n      checksum: ${{ needs.publish_candidate.outputs.checksum }}\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n\n  destroy_staging:\n    uses: ptonini/gha-workflows/.github/workflows/destroy-staging.yaml@main\n    if: needs.startup.outputs.destroy_staging == 'true'\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  approve_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.approve_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: ${{ format('pr{0}', github.event.pull_request.number) }}\n      tag: pr-approved\n  \n  promote_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.promote_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: pr-approved\n      tag: ${{ needs.startup.outputs.release_version }}\n  deploy_to_production:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - promote_candidate\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n  \n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/deploy.yml",
            "id": "sc_email_forward/.github/workflows/deploy.yml",
            "overwrite_on_create": true,
            "repository": "sc_email_forward",
            "sha": "e60f89ab5eef9a6ffa8c95347f83ab74ee47900e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_deploy_helm_release.data.github_repositories.this",
            "module.workflow_deploy_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "sc_email_report",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/deploy.yml created/modified by terraform [skip ci]",
            "commit_sha": "394e7e40e2571cf9e6088220fff301bcfbfdedb8",
            "content": "name: deploy\n\nconcurrency:\n  group: ${{ github.event_name }}\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n    paths-ignore:\n      - manifest.yaml\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - closed\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    if: (!contains(github.event.pull_request.head.ref, 'release-please--'))\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  publish_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/publish-docker-image.yaml@main\n    if: needs.startup.outputs.publish_candidate == 'true'\n    needs:\n      - startup\n    with:\n      tags: ${{ format('latest pr{0}', github.event.number) }}\n    secrets:\n      BUILD_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}\n  create_staging:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    if: needs.startup.outputs.create_staging == 'true'\n    needs:\n      - startup\n      - publish_candidate\n    with:\n      checksum: ${{ needs.publish_candidate.outputs.checksum }}\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n\n  destroy_staging:\n    uses: ptonini/gha-workflows/.github/workflows/destroy-staging.yaml@main\n    if: needs.startup.outputs.destroy_staging == 'true'\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  approve_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.approve_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: ${{ format('pr{0}', github.event.pull_request.number) }}\n      tag: pr-approved\n  \n  promote_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.promote_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: pr-approved\n      tag: ${{ needs.startup.outputs.release_version }}\n  deploy_to_production:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - promote_candidate\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n  \n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/deploy.yml",
            "id": "sc_email_report/.github/workflows/deploy.yml",
            "overwrite_on_create": true,
            "repository": "sc_email_report",
            "sha": "e60f89ab5eef9a6ffa8c95347f83ab74ee47900e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_deploy_helm_release.data.github_repositories.this",
            "module.workflow_deploy_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "scrapper_to_elastic",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/deploy.yml created/modified by terraform [skip ci]",
            "commit_sha": "0973e15b7babad4b19bbe560c6ee3df21e58b50d",
            "content": "name: deploy\n\nconcurrency:\n  group: ${{ github.event_name }}\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n    paths-ignore:\n      - manifest.yaml\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - closed\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    if: (!contains(github.event.pull_request.head.ref, 'release-please--'))\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  publish_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/publish-docker-image.yaml@main\n    if: needs.startup.outputs.publish_candidate == 'true'\n    needs:\n      - startup\n    with:\n      tags: ${{ format('latest pr{0}', github.event.number) }}\n    secrets:\n      BUILD_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}\n  create_staging:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    if: needs.startup.outputs.create_staging == 'true'\n    needs:\n      - startup\n      - publish_candidate\n    with:\n      checksum: ${{ needs.publish_candidate.outputs.checksum }}\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n\n  destroy_staging:\n    uses: ptonini/gha-workflows/.github/workflows/destroy-staging.yaml@main\n    if: needs.startup.outputs.destroy_staging == 'true'\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  approve_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.approve_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: ${{ format('pr{0}', github.event.pull_request.number) }}\n      tag: pr-approved\n  \n  promote_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.promote_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: pr-approved\n      tag: ${{ needs.startup.outputs.release_version }}\n  deploy_to_production:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - promote_candidate\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n  \n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/deploy.yml",
            "id": "scrapper_to_elastic/.github/workflows/deploy.yml",
            "overwrite_on_create": true,
            "repository": "scrapper_to_elastic",
            "sha": "e60f89ab5eef9a6ffa8c95347f83ab74ee47900e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_deploy_helm_release.data.github_repositories.this",
            "module.workflow_deploy_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "seller_gmail_to_elastic",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/deploy.yml created/modified by terraform [skip ci]",
            "commit_sha": "85ff433213951d0951a5d3f8bdc2290a0b202dda",
            "content": "name: deploy\n\nconcurrency:\n  group: ${{ github.event_name }}\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n    paths-ignore:\n      - manifest.yaml\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - closed\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    if: (!contains(github.event.pull_request.head.ref, 'release-please--'))\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  publish_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/publish-docker-image.yaml@main\n    if: needs.startup.outputs.publish_candidate == 'true'\n    needs:\n      - startup\n    with:\n      tags: ${{ format('latest pr{0}', github.event.number) }}\n    secrets:\n      BUILD_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}\n  create_staging:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    if: needs.startup.outputs.create_staging == 'true'\n    needs:\n      - startup\n      - publish_candidate\n    with:\n      checksum: ${{ needs.publish_candidate.outputs.checksum }}\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n\n  destroy_staging:\n    uses: ptonini/gha-workflows/.github/workflows/destroy-staging.yaml@main\n    if: needs.startup.outputs.destroy_staging == 'true'\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  approve_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.approve_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: ${{ format('pr{0}', github.event.pull_request.number) }}\n      tag: pr-approved\n  \n  promote_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.promote_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: pr-approved\n      tag: ${{ needs.startup.outputs.release_version }}\n  deploy_to_production:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - promote_candidate\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n  \n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/deploy.yml",
            "id": "seller_gmail_to_elastic/.github/workflows/deploy.yml",
            "overwrite_on_create": true,
            "repository": "seller_gmail_to_elastic",
            "sha": "e60f89ab5eef9a6ffa8c95347f83ab74ee47900e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_deploy_helm_release.data.github_repositories.this",
            "module.workflow_deploy_helm_release.data.github_repository.this"
          ]
        },
        {
          "index_key": "spa_lojista_prod_to_report",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/deploy.yml created/modified by terraform [skip ci]",
            "commit_sha": "010a2bd8b515745744a294cc77fb2eef2f90fb08",
            "content": "name: deploy\n\nconcurrency:\n  group: ${{ github.event_name }}\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n    paths-ignore:\n      - manifest.yaml\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - closed\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    if: (!contains(github.event.pull_request.head.ref, 'release-please--'))\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  publish_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/publish-docker-image.yaml@main\n    if: needs.startup.outputs.publish_candidate == 'true'\n    needs:\n      - startup\n    with:\n      tags: ${{ format('latest pr{0}', github.event.number) }}\n    secrets:\n      BUILD_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}\n  create_staging:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    if: needs.startup.outputs.create_staging == 'true'\n    needs:\n      - startup\n      - publish_candidate\n    with:\n      checksum: ${{ needs.publish_candidate.outputs.checksum }}\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n\n  destroy_staging:\n    uses: ptonini/gha-workflows/.github/workflows/destroy-staging.yaml@main\n    if: needs.startup.outputs.destroy_staging == 'true'\n    needs:\n      - startup\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  approve_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.approve_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: ${{ format('pr{0}', github.event.pull_request.number) }}\n      tag: pr-approved\n  \n  promote_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.promote_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: pr-approved\n      tag: ${{ needs.startup.outputs.release_version }}\n  deploy_to_production:\n    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main\n    needs:\n      - promote_candidate\n    secrets:\n      OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}\n      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}\n      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}\n      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}\n  \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n  \n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/deploy.yml",
            "id": "spa_lojista_prod_to_report/.github/workflows/deploy.yml",
            "overwrite_on_create": true,
            "repository": "spa_lojista_prod_to_report",
            "sha": "e60f89ab5eef9a6ffa8c95347f83ab74ee47900e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_deploy_helm_release.data.github_repositories.this",
            "module.workflow_deploy_helm_release.data.github_repository.this"
          ]
        }
      ]
    },
    {
      "module": "module.workflow_publish_docker_image",
      "mode": "data",
      "type": "github_repositories",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "docker-image github-flow",
          "schema_version": 0,
          "attributes": {
            "full_names": [
              "nodis-com-br/dk_botman",
              "nodis-com-br/dk_netcat",
              "nodis-com-br/dk_toolbox",
              "nodis-com-br/kac-ca-injector"
            ],
            "id": "docker-image github-flow in:topics org:nodis-com-br archived:false",
            "names": [
              "dk_botman",
              "dk_netcat",
              "dk_toolbox",
              "kac-ca-injector"
            ],
            "query": "docker-image github-flow in:topics org:nodis-com-br archived:false",
            "sort": "updated"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.workflow_publish_docker_image",
      "mode": "data",
      "type": "github_repository",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "dk_botman",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "master",
                "protected": false
              },
              {
                "name": "new-workflow",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/dk_botman",
            "git_clone_url": "git://github.com/nodis-com-br/dk_botman.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/dk_botman",
            "http_clone_url": "https://github.com/nodis-com-br/dk_botman.git",
            "id": "dk_botman",
            "name": "dk_botman",
            "node_id": "R_kgDOGyqNig",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 455773578,
            "ssh_clone_url": "git@github.com:nodis-com-br/dk_botman.git",
            "svn_url": "https://github.com/nodis-com-br/dk_botman",
            "topics": [
              "docker-image",
              "github-flow"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "dk_netcat",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/dk_netcat",
            "git_clone_url": "git://github.com/nodis-com-br/dk_netcat.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/dk_netcat",
            "http_clone_url": "https://github.com/nodis-com-br/dk_netcat.git",
            "id": "dk_netcat",
            "name": "dk_netcat",
            "node_id": "R_kgDOGwhT0Q",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 453530577,
            "ssh_clone_url": "git@github.com:nodis-com-br/dk_netcat.git",
            "svn_url": "https://github.com/nodis-com-br/dk_netcat",
            "topics": [
              "docker-image",
              "github-flow"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "dk_toolbox",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/dk_toolbox",
            "git_clone_url": "git://github.com/nodis-com-br/dk_toolbox.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/dk_toolbox",
            "http_clone_url": "https://github.com/nodis-com-br/dk_toolbox.git",
            "id": "dk_toolbox",
            "name": "dk_toolbox",
            "node_id": "MDEwOlJlcG9zaXRvcnkyODEyNTQ0Nzk=",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 281254479,
            "ssh_clone_url": "git@github.com:nodis-com-br/dk_toolbox.git",
            "svn_url": "https://github.com/nodis-com-br/dk_toolbox",
            "topics": [
              "docker-image",
              "github-flow"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "kac-ca-injector",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "add-injected-annotation",
                "protected": false
              },
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              },
              {
                "name": "release-please--branches--master",
                "protected": false
              },
              {
                "name": "remove-code-smells",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/kac-ca-injector",
            "git_clone_url": "git://github.com/nodis-com-br/kac-ca-injector.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/kac-ca-injector",
            "http_clone_url": "https://github.com/nodis-com-br/kac-ca-injector.git",
            "id": "kac-ca-injector",
            "name": "kac-ca-injector",
            "node_id": "R_kgDOHeKwZg",
            "only_protected_branches": false,
            "pages": [],
            "private": false,
            "repo_id": 501395558,
            "ssh_clone_url": "git@github.com:nodis-com-br/kac-ca-injector.git",
            "svn_url": "https://github.com/nodis-com-br/kac-ca-injector",
            "topics": [
              "docker-image",
              "github-flow"
            ],
            "visibility": "public"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.workflow_publish_docker_image",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "dk_botman",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/publish.yml created/modified by terraform [skip ci]",
            "commit_sha": "1d7aa1daa2cdcc28ffadf1bd823e304f211266e4",
            "content": "name: publish\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - closed\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    if: (!contains(github.event.pull_request.head.ref, 'release-please--'))\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  publish_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/publish-docker-image.yaml@main\n    if: needs.startup.outputs.publish_candidate == 'true'\n    needs:\n      - startup\n    with:\n      tags: ${{ format('latest pr{0}', github.event.number) }}\n    secrets:\n      BUILD_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}\n  \n  approve_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.approve_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: ${{ format('pr{0}', github.event.pull_request.number) }}\n      tag: pr-approved\n  \n  promote_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.promote_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: pr-approved\n      tag: ${{ needs.startup.outputs.release_version }}\n   \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n\n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/publish.yml",
            "id": "dk_botman/.github/workflows/publish.yml",
            "overwrite_on_create": true,
            "repository": "dk_botman",
            "sha": "8a52b6663b9883d889a5cf760c8e5c95532a14bf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_publish_docker_image.data.github_repositories.this",
            "module.workflow_publish_docker_image.data.github_repository.this"
          ]
        },
        {
          "index_key": "dk_netcat",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/publish.yml created/modified by terraform [skip ci]",
            "commit_sha": "c8ecbbcdd719582bb3d13fe6c0c9b97e2176c161",
            "content": "name: publish\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - closed\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    if: (!contains(github.event.pull_request.head.ref, 'release-please--'))\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  publish_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/publish-docker-image.yaml@main\n    if: needs.startup.outputs.publish_candidate == 'true'\n    needs:\n      - startup\n    with:\n      tags: ${{ format('latest pr{0}', github.event.number) }}\n    secrets:\n      BUILD_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}\n  \n  approve_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.approve_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: ${{ format('pr{0}', github.event.pull_request.number) }}\n      tag: pr-approved\n  \n  promote_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.promote_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: pr-approved\n      tag: ${{ needs.startup.outputs.release_version }}\n   \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n\n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/publish.yml",
            "id": "dk_netcat/.github/workflows/publish.yml",
            "overwrite_on_create": true,
            "repository": "dk_netcat",
            "sha": "8a52b6663b9883d889a5cf760c8e5c95532a14bf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_publish_docker_image.data.github_repositories.this",
            "module.workflow_publish_docker_image.data.github_repository.this"
          ]
        },
        {
          "index_key": "dk_toolbox",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/publish.yml created/modified by terraform [skip ci]",
            "commit_sha": "db07863734a0795aceca3bea3b425eee2c7c68df",
            "content": "name: publish\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - closed\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    if: (!contains(github.event.pull_request.head.ref, 'release-please--'))\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  publish_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/publish-docker-image.yaml@main\n    if: needs.startup.outputs.publish_candidate == 'true'\n    needs:\n      - startup\n    with:\n      tags: ${{ format('latest pr{0}', github.event.number) }}\n    secrets:\n      BUILD_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}\n  \n  approve_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.approve_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: ${{ format('pr{0}', github.event.pull_request.number) }}\n      tag: pr-approved\n  \n  promote_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.promote_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: pr-approved\n      tag: ${{ needs.startup.outputs.release_version }}\n   \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n\n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/publish.yml",
            "id": "dk_toolbox/.github/workflows/publish.yml",
            "overwrite_on_create": true,
            "repository": "dk_toolbox",
            "sha": "8a52b6663b9883d889a5cf760c8e5c95532a14bf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_publish_docker_image.data.github_repositories.this",
            "module.workflow_publish_docker_image.data.github_repository.this"
          ]
        },
        {
          "index_key": "kac-ca-injector",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/publish.yml created/modified by terraform [skip ci]",
            "commit_sha": "6f5833d68fa984cec1c9d59012d43a63ae4a9580",
            "content": "name: publish\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - closed\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    if: (!contains(github.event.pull_request.head.ref, 'release-please--'))\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  publish_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/publish-docker-image.yaml@main\n    if: needs.startup.outputs.publish_candidate == 'true'\n    needs:\n      - startup\n    with:\n      tags: ${{ format('latest pr{0}', github.event.number) }}\n    secrets:\n      BUILD_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}\n  \n  approve_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.approve_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: ${{ format('pr{0}', github.event.pull_request.number) }}\n      tag: pr-approved\n  \n  promote_candidate:\n    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main\n    if: needs.startup.outputs.promote_candidate == 'true'\n    needs:\n      - startup\n    with:\n      source_tag: pr-approved\n      tag: ${{ needs.startup.outputs.release_version }}\n   \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n\n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/publish.yml",
            "id": "kac-ca-injector/.github/workflows/publish.yml",
            "overwrite_on_create": true,
            "repository": "kac-ca-injector",
            "sha": "8a52b6663b9883d889a5cf760c8e5c95532a14bf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_publish_docker_image.data.github_repositories.this",
            "module.workflow_publish_docker_image.data.github_repository.this"
          ]
        }
      ]
    },
    {
      "module": "module.workflow_publish_go_application",
      "mode": "data",
      "type": "github_repositories",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "vault-plugin github-flow",
          "schema_version": 0,
          "attributes": {
            "full_names": [
              "nodis-com-br/vault-k8s-secrets-engine"
            ],
            "id": "vault-plugin github-flow in:topics org:nodis-com-br archived:false",
            "names": [
              "vault-k8s-secrets-engine"
            ],
            "query": "vault-plugin github-flow in:topics org:nodis-com-br archived:false",
            "sort": "updated"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.workflow_publish_go_application",
      "mode": "data",
      "type": "github_repository",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "vault-k8s-secrets-engine",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/vault-k8s-secrets-engine",
            "git_clone_url": "git://github.com/nodis-com-br/vault-k8s-secrets-engine.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/vault-k8s-secrets-engine",
            "http_clone_url": "https://github.com/nodis-com-br/vault-k8s-secrets-engine.git",
            "id": "vault-k8s-secrets-engine",
            "name": "vault-k8s-secrets-engine",
            "node_id": "R_kgDOHMDdyg",
            "only_protected_branches": false,
            "pages": [],
            "private": false,
            "repo_id": 482401738,
            "ssh_clone_url": "git@github.com:nodis-com-br/vault-k8s-secrets-engine.git",
            "svn_url": "https://github.com/nodis-com-br/vault-k8s-secrets-engine",
            "topics": [
              "devops",
              "github-flow",
              "hashicorp",
              "hashicorp-vault",
              "sre",
              "vault",
              "vault-plugin"
            ],
            "visibility": "public"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.workflow_publish_go_application",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "vault-k8s-secrets-engine",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/publish.yml created/modified by terraform [skip ci]",
            "commit_sha": "da19922b20b360b95f93af43de8c942638488886",
            "content": "name: publish\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n  pull_request:\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n  \n  publish_artifact:\n    uses: ptonini/gha-workflows/.github/workflows/publish-go-application.yaml@main\n    needs:\n      - startup\n      - release_please\n    with:\n      release_created: ${{ needs.release_please.outputs.release_created }}\n      tag_name: ${{ needs.release_please.outputs.tag_name }}\n  \n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/publish.yml",
            "id": "vault-k8s-secrets-engine/.github/workflows/publish.yml",
            "overwrite_on_create": true,
            "repository": "vault-k8s-secrets-engine",
            "sha": "c0c04378b6d6c922453fb46ba8f0905c12bebc4e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_publish_go_application.data.github_repositories.this",
            "module.workflow_publish_go_application.data.github_repository.this"
          ]
        }
      ]
    },
    {
      "module": "module.workflow_publish_lua_rock",
      "mode": "data",
      "type": "github_repositories",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "kong-plugin github-flow",
          "schema_version": 0,
          "attributes": {
            "full_names": [
              "nodis-com-br/kong-github-auth",
              "nodis-com-br/kong-oidc"
            ],
            "id": "kong-plugin github-flow in:topics org:nodis-com-br archived:false",
            "names": [
              "kong-github-auth",
              "kong-oidc"
            ],
            "query": "kong-plugin github-flow in:topics org:nodis-com-br archived:false",
            "sort": "updated"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.workflow_publish_lua_rock",
      "mode": "data",
      "type": "github_repository",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "kong-github-auth",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/kong-github-auth",
            "git_clone_url": "git://github.com/nodis-com-br/kong-github-auth.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/kong-github-auth",
            "http_clone_url": "https://github.com/nodis-com-br/kong-github-auth.git",
            "id": "kong-github-auth",
            "name": "kong-github-auth",
            "node_id": "R_kgDOID9O5w",
            "only_protected_branches": false,
            "pages": [],
            "private": false,
            "repo_id": 541019879,
            "ssh_clone_url": "git@github.com:nodis-com-br/kong-github-auth.git",
            "svn_url": "https://github.com/nodis-com-br/kong-github-auth",
            "topics": [
              "github-flow",
              "kong-plugin"
            ],
            "visibility": "public"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "kong-oidc",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/kong-oidc",
            "git_clone_url": "git://github.com/nodis-com-br/kong-oidc.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/kong-oidc",
            "http_clone_url": "https://github.com/nodis-com-br/kong-oidc.git",
            "id": "kong-oidc",
            "name": "kong-oidc",
            "node_id": "R_kgDOHLFWYw",
            "only_protected_branches": false,
            "pages": [],
            "private": false,
            "repo_id": 481384035,
            "ssh_clone_url": "git@github.com:nodis-com-br/kong-oidc.git",
            "svn_url": "https://github.com/nodis-com-br/kong-oidc",
            "topics": [
              "github-flow",
              "kong-plugin"
            ],
            "visibility": "public"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.workflow_publish_lua_rock",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "kong-github-auth",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/publish.yml created/modified by terraform [skip ci]",
            "commit_sha": "d65467fbcd5a5229ceca4788dcf7760a9226a6e6",
            "content": "name: publish\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n  pull_request:\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n  \n  publish_artifact:\n    uses: ptonini/gha-workflows/.github/workflows/publish-lua-rock.yaml@main\n    needs:\n      - startup\n      - release_please\n    with:\n      release_created: ${{ needs.release_please.outputs.release_created }}\n      tag_name: ${{ needs.release_please.outputs.tag_name }}\n  \n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/publish.yml",
            "id": "kong-github-auth/.github/workflows/publish.yml",
            "overwrite_on_create": true,
            "repository": "kong-github-auth",
            "sha": "44ba6cb640381e96d6193af048b2886dbff114fd"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_publish_lua_rock.data.github_repositories.this",
            "module.workflow_publish_lua_rock.data.github_repository.this"
          ]
        },
        {
          "index_key": "kong-oidc",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/publish.yml created/modified by terraform [skip ci]",
            "commit_sha": "e9b67be4a0f3f8dd18e5af06c512423a967675a2",
            "content": "name: publish\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n  pull_request:\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n  \n  publish_artifact:\n    uses: ptonini/gha-workflows/.github/workflows/publish-lua-rock.yaml@main\n    needs:\n      - startup\n      - release_please\n    with:\n      release_created: ${{ needs.release_please.outputs.release_created }}\n      tag_name: ${{ needs.release_please.outputs.tag_name }}\n  \n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/publish.yml",
            "id": "kong-oidc/.github/workflows/publish.yml",
            "overwrite_on_create": true,
            "repository": "kong-oidc",
            "sha": "44ba6cb640381e96d6193af048b2886dbff114fd"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_publish_lua_rock.data.github_repositories.this",
            "module.workflow_publish_lua_rock.data.github_repository.this"
          ]
        }
      ]
    },
    {
      "module": "module.workflow_publish_python_package",
      "mode": "data",
      "type": "github_repositories",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "library github-flow",
          "schema_version": 0,
          "attributes": {
            "full_names": [],
            "id": "library github-flow in:topics org:nodis-com-br archived:false language:python",
            "names": [],
            "query": "library github-flow in:topics org:nodis-com-br archived:false language:python",
            "sort": "updated"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "package github-flow",
          "schema_version": 0,
          "attributes": {
            "full_names": [
              "nodis-com-br/maestro"
            ],
            "id": "package github-flow in:topics org:nodis-com-br archived:false language:python",
            "names": [
              "maestro"
            ],
            "query": "package github-flow in:topics org:nodis-com-br archived:false language:python",
            "sort": "updated"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.workflow_publish_python_package",
      "mode": "data",
      "type": "github_repository",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "maestro",
          "schema_version": 0,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "archived": false,
            "branches": [
              {
                "name": "develop",
                "protected": false
              },
              {
                "name": "master",
                "protected": false
              }
            ],
            "default_branch": "master",
            "description": "",
            "full_name": "nodis-com-br/maestro",
            "git_clone_url": "git://github.com/nodis-com-br/maestro.git",
            "has_downloads": true,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": true,
            "homepage_url": "",
            "html_url": "https://github.com/nodis-com-br/maestro",
            "http_clone_url": "https://github.com/nodis-com-br/maestro.git",
            "id": "maestro",
            "name": "maestro",
            "node_id": "MDEwOlJlcG9zaXRvcnkyODgzMjY2MDc=",
            "only_protected_branches": false,
            "pages": [],
            "private": true,
            "repo_id": 288326607,
            "ssh_clone_url": "git@github.com:nodis-com-br/maestro.git",
            "svn_url": "https://github.com/nodis-com-br/maestro",
            "topics": [
              "github-flow",
              "package"
            ],
            "visibility": "private"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.workflow_publish_python_package",
      "mode": "managed",
      "type": "github_repository_file",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "maestro",
          "schema_version": 0,
          "attributes": {
            "branch": "master",
            "commit_author": "terraform",
            "commit_email": "terraform@users.noreply.github.com",
            "commit_message": "chore: .github/workflows/publish.yml created/modified by terraform [skip ci]",
            "commit_sha": "e2b83f228ac6e3c491ee5dfe4cd09072448135b1",
            "content": "name: publish\n\non:\n  push:\n    branches:\n      - master\n      - main\n      - legacy/*\n  pull_request:\n    branches:\n      - master\n      - main\n      - legacy/*\n\njobs:\n  release_please:\n    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main\n    if: github.event_name == 'push'\n  \n  startup:\n    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main\n    secrets:\n      ORG_CONFIG: ${{ secrets.ORG_CONFIG }}\n  \n  unit_tests:\n    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main\n    if: needs.startup.outputs.skip_tests == 'false'\n    needs:\n      - startup\n  quality_scan:\n    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main\n    needs:\n      - unit_tests\n    secrets:\n      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n  \n  publish_artifact:\n    uses: ptonini/gha-workflows/.github/workflows/publish-python-package.yaml@main\n    needs:\n      - startup\n      - release_please\n    with:\n      release_created: ${{ needs.release_please.outputs.release_created }}\n      tag_name: ${{ needs.release_please.outputs.tag_name }}\n    secrets:\n      PYPI_ADDR: ${{ secrets.PYPI_ADDR }}\n  \n  code_linting:\n    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup\n  security_leaks_scan:\n    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main\n    if: needs.startup.outputs.housekeeping == 'true'\n    needs:\n      - startup",
            "file": ".github/workflows/publish.yml",
            "id": "maestro/.github/workflows/publish.yml",
            "overwrite_on_create": true,
            "repository": "maestro",
            "sha": "1dcb0506caa919d979ce139975447ddb0cca5ac0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workflow_publish_python_package.data.github_repositories.this",
            "module.workflow_publish_python_package.data.github_repository.this"
          ]
        }
      ]
    }
  ],
  "check_results": []
}
