name: deploy-helm-releases

on:
  workflow_call:
    inputs:
      macros:
        description: ''
        required: true
        type: string
      digest:
        description: ''
        required: false
        type: string
      vault_k8s_role_path:
        description: ''
        required: true
        type: string
    secrets:
      OPENVPN_CONFIG:
        description: ''
        required: true
    outputs:
      staging_host:
        description: ''
        value: ${{ jobs.deploy_helm_releases.outputs.staging_host }}

jobs:
  deploy_helm_releases:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - run: env | sort
      - run: cat ${GITHUB_EVENT_PATH}
      - uses: ptonini/gha-openvpn@main
        with:
          openvpn_config: ${{ secrets.OPENVPN_CONFIG }}
          validation_addr: ${{ vars.vault_addr }}
      - uses: hashicorp/vault-action@v2.4.3
        with:
          url: ${{ vars.vault_addr }}
          method: ${{ vars.vault_method }}
          path: ${{ vars.vault_path }}
          role: ${{ vars.vault_role }}
          exportToken: true
          secrets: ${{ inputs.vault_k8s_role_path }} kube_config | KUBECONFIG_MANIFEST;
      - uses: hashicorp/vault-action@v2.4.3
        if: github.event_name == 'pull_request'
        with:
          url: ${{ vars.vault_addr }}
          token: ${{ env.VAULT_TOKEN }}
          secrets: ${{ vars.vault_github_token_path }} token | GH_TOKEN;
      - uses: ptonini/gha-create-helm-releases@main
        id: releases
        with:
          macros: ${{ inputs.macros }}
          digest: ${{ inputs.digest }}
          container_registry: ${{ vars.container_registry }}
          manifest_file: ${{ vars.manifest_file }}
          rp_manifest_file: ${{ vars.rp_manifest_file }}
          staging_domain: ${{ vars.staging_domain }}
          github_token: ${{ env.GH_TOKEN }}
      - uses: ptonini/gha-deploy-helm-releases@main
        with:
          kubeconfig_content: ${{ env.KUBECONFIG_MANIFEST }}
          releases: ${{ steps.releases.outputs.releases }}
      - uses: thollander/actions-comment-pull-request@v2
        if: github.event_name == 'pull_request'
        with:
          message: ${{ steps.releases.outputs.message }}
    outputs:
      staging_host: ${{ steps.releases.outputs.staging_host }}
