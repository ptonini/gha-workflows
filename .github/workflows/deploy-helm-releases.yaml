name: deploy-helm-releases

on:
  workflow_call:
    inputs:
      vault_addr:
        description: ''
        required: true
        type: string
      environment:
        description: ''
        required: false
        type: string
      org_domain:
        description: ""
        required: false
        type: string
      app_groups:
        description: ""
        required: false
        type: string
      namespace:
        description: ''
        required: false
        type: string
      digest:
        description: ''
        required: false
        type: string
      vault_method:
        description: ''
        default: jwt
        required: false
        type: string
      vault_path:
        description: ''
        default: oidc/github
        required: false
        type: string
      vault_role:
        description: ''
        default: workflow
        required: false
        type: string
      vault_k8s_role_path:
        description: ''
        required: true
        type: string
      vault_github_token_path:
        description: ''
        required: false
        type: string
    secrets:
      OPENVPN_CONFIG:
        description: ''
        required: true
    outputs:
      hostnames:
        description: ''
        value: ${{ jobs.deploy_helm_releases.outputs.hostnames }}

jobs:
  deploy_helm_releases:
    runs-on: ubuntu-latest
    outputs:
      hostnames: ${{ steps.releases.outputs.hostnames }}
    steps:
      - run: env | sort
      - uses: ptonini/gha-openvpn@main
        with:
          openvpn_config: ${{ secrets.OPENVPN_CONFIG }}
          validation_addr: ${{ inputs.vault_addr }}
      - uses: hashicorp/vault-action@v2.4.3
        with:
          url: ${{ inputs.vault_addr }}
          method: ${{ inputs.vault_method }}
          path: ${{ inputs.vault_path }}
          role: ${{ inputs.vault_role }}
          exportToken: true
          secrets: ${{ inputs.vault_k8s_role_path }} kube_config | KUBECONFIG_CONTENT;
      - uses: hashicorp/vault-action@v2.4.3
        if: inputs.vault_github_token_path
        with:
          url: ${{ inputs.vault_addr }}
          token: ${{ env.VAULT_TOKEN }}
          secrets: ${{ inputs.vault_github_token_path }} token | GH_TOKEN;
      - run: echo "GH_TOKEN=${{ github.token }}" | tee -a $GITHUB_ENV
        if: inputs.vault_github_token_path == ''
      - uses: ptonini/gha-prepare-helm-releases@main
        id: releases
        with:
          github_token: ${{ env.GH_TOKEN }}
          digest: ${{ inputs.digest }}
          namespace: ${{ inputs.namespace }}
          environment: ${{ inputs.environment }}
          org_domain: ${{ inputs.org_domain }}
          org_app_groups: ${{ inputs.app_groups }}
      - uses: actions/upload-artifact@v3
        with:
          name: releases
          path: ${{ github.workspace }}/**
      - uses: ptonini/gha-deploy-helm-releases@main
        with:
          kubeconfig_content: ${{ env.KUBECONFIG_CONTENT }}
          releases: ${{ steps.releases.outputs.releases }}
      - uses: thollander/actions-comment-pull-request@v1
        if: steps.releases.outputs.message != ''
        with:
          message: ${{ steps.releases.outputs.message }}
          comment_includes: ${{ steps.releases.outputs.message }}
