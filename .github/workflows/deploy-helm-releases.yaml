name: deploy-helm-releases

on:
  workflow_call:
    inputs:
      digest:
        description: ''
        required: false
        type: string
      vault_k8s_role_path:
        description: ''
        required: true
        type: string
    secrets:
      OPENVPN_CONFIG:
        description: ''
        required: true
    outputs:
      hostnames:
        description: ''
        value: ${{ jobs.deploy_helm_releases.outputs.hostnames }}

jobs:
  deploy_helm_releases:
    runs-on: ubuntu-latest
    outputs:
      hostnames: ${{ steps.releases.outputs.hostnames }}
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - run: env | sort
      - uses: ptonini/gha-openvpn@main
        with:
          openvpn_config: ${{ secrets.OPENVPN_CONFIG }}
          validation_addr: ${{ vars.vault_addr }}
      - uses: hashicorp/vault-action@v2.4.3
        with:
          url: ${{ vars.vault_addr }}
          method: ${{ vars.vault_method }}
          path: ${{ vars.vault_path }}
          role: ${{ vars.vault_role }}
          exportToken: true
          secrets: ${{ inputs.vault_k8s_role_path }} kube_config | KUBECONFIG_CONTENT;
      - uses: hashicorp/vault-action@v2.4.3
        if: github.event_name == 'pull_request'
        with:
          url: ${{ vars.vault_addr }}
          token: ${{ env.VAULT_TOKEN }}
          secrets: ${{ vars.vault_github_token_path }} token | GH_TOKEN;
      - run: echo "STAGING_NAMESPACE=$(tr _ - <<< ${{ github.event.repository.name }})-${{ github.event.number }}" | tee -a ${GITHUB_ENV}
        if: github.event_name == 'pull_request'
      - uses: ptonini/gha-prepare-helm-releases@main
        id: releases
        with:
          digest: ${{ inputs.digest }}
          environment: ${{ vars.environment }}
          staging_environment: ${{ vars.staging_environment }}
          staging_namespace: ${{ env.STAGING_NAMESPACE }}
          manifest_file: ${{ vars.manifest_file }}
          rp_manifest_file: ${{ vars.rp_manifest_file }}
          ingress_configs_repository: ${{ vars.ingress_configs_repository }}
          org_domain: ${{ vars.org_domain }}
          github_token: ${{ env.GH_TOKEN }}
      - run: echo "RELEASES=$(ls -d */ | tr "\n" " " | tr -d / )" | tee -a $GITHUB_ENV
      - uses: actions/upload-artifact@v3
        with:
          name: releases
          path: ${{ github.workspace }}/**
      - uses: ptonini/gha-deploy-helm-releases@main
        with:
          kubeconfig_content: ${{ env.KUBECONFIG_CONTENT }}
          releases: ${{ env.RELEASES }}
      - uses: thollander/actions-comment-pull-request@v2
        if: steps.releases.outputs.message
        with:
          message: ${{ steps.releases.outputs.message }}
          comment_includes: ${{ steps.releases.outputs.message }}
