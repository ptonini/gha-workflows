name: deploy-helm-releases

on:
  workflow_call:
    inputs:
      namespace:
        description: ''
        required: false
        type: string
      digest:
        description: ''
        required: false
        type: string
      vault_method:
        description: ''
        default: jwt
        required: false
        type: string
      vault_path:
        description: ''
        default: oidc/github
        required: false
        type: string
      vault_role:
        description: ''
        default: workflow
        required: false
        type: string
    secrets:
      OPENVPN_CONFIG:
        description: ''
        required: true
      VAULT_ADDR:
        description: ''
        required: true
      VAULT_K8S_ROLE_PATH:
        description: ''
        required: true
      ENVIRONMENT:
        description: ''
        required: false
      ORG_DOMAIN:
        description: ""
        required: false
      ORG_APP_GROUPS:
        description: ""
        required: false
      VAULT_GITHUB_TOKEN_PATH:
        description: ''
        required: false
        

jobs:
  deploy_helm_releases:
    runs-on: ubuntu-latest
    steps:
      - run: env | sort
      - uses: ptonini/gha-openvpn@main
        with:
          openvpn_config: ${{ secrets.OPENVPN_CONFIG }}
          validation_addr: ${{ secrets.VAULT_ADDR }}
      - uses: hashicorp/vault-action@v2.4.3
        with:
          method: ${{ inputs.vault_method }}
          path: ${{ inputs.vault_path }}
          role: ${{ inputs.vault_role }}
          url: ${{ secrets.VAULT_ADDR }}
          exportToken: true
          secrets: ${{ secrets.VAULT_K8S_ROLE_PATH }} kube_config | KUBECONFIG_CONTENT;
      - run: echo "VAULT_GITHUB_TOKEN_PATH=${{ secrets.VAULT_GITHUB_TOKEN_PATH }}" | tee -a $GITHUB_ENV
      - uses: hashicorp/vault-action@v2.4.3
        if: env.VAULT_GITHUB_TOKEN_PATH != ''
        with:
          url: ${{ secrets.VAULT_ADDR }}
          token: ${{ env.VAULT_TOKEN }}
          secrets: ${{ secrets.VAULT_GITHUB_TOKEN_PATH }} token | GH_TOKEN;
      - run: echo "GH_TOKEN=${{ github.token }}" | tee -a $GITHUB_ENV
        if: env.VAULT_GITHUB_TOKEN_PATH == ''
      - uses: ptonini/gha-prepare-helm-releases@main
        id: releases
        with:
          github_token: ${{ env.GH_TOKEN }}
          digest: ${{ inputs.digest }}
          namespace: ${{ inputs.namespace }}
          environment: ${{ secrets.ENVIRONMENT }}
          org_domain: ${{ secrets.ORG_DOMAIN }}
          org_app_groups: ${{ secrets.ORG_APP_GROUPS }}
      - uses: actions/upload-artifact@v3
        with:
          name: releases
          path: ${{ github.workspace }}/**
      - uses: ptonini/gha-deploy-helm-releases@main
        with:
          kubeconfig_content: ${{ env.KUBECONFIG_CONTENT }}
          releases: ${{ steps.releases.outputs.releases }}
      - uses: thollander/actions-comment-pull-request@v1
        if: steps.releases.outputs.message != ''
        with:
          message: ${{ steps.releases.outputs.message }}
          comment_includes: ${{ steps.releases.outputs.message }}
