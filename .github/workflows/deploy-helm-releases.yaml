name: deploy-helm-releases

on:
  workflow_call:
    inputs:
      environment:
        description: ''
        required: false
        type: string
        default: production
      digest:
        description: ''
        required: false
        type: string
    secrets:
      OPENVPN_CONFIG:
        description: ''
        required: true
      GH_READER_TOKEN:
        description: ''
        required: true
    outputs:
      staging_host:
        description: ''
        value: ${{ jobs.deploy_helm_releases.outputs.staging_host }}

jobs:
  deploy_helm_releases:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - run: env | sort
      - run: cat ${GITHUB_EVENT_PATH}
      - uses: ptonini/gha-openvpn@main
        if: vars.ovpn_validation_addr != ''
        with:
          openvpn_config: ${{ secrets.OPENVPN_CONFIG }}
          validation_addr: ${{ vars.ovpn_validation_addr }}
      - uses: ptonini/gha-cloud-login@main
        with:
          vault_addr: ${{ vars.vault_addr }}
          vault_method: ${{ vars.vault_method }}
          vault_path: ${{ vars.vault_path }}
          vault_role: ${{ vars.vault_role }}
          aws_region: ${{ vars.aws_region }}
          aws_role: ${{ vars.aws_role }}
          azure_tenant_id: ${{ vars.azure_tenant_id }}
          azure_subscription_id: ${{ vars.azure_subscription_id }}
          azure_client_id: ${{ vars.azure_client_id }}
          openstack_config: ${{ secrets.OPENSTACK_CONFIG }}
      - uses: ptonini/gha-get-kubeconfig@main
        with:
          kubeconfig_source: ${{ vars.kubeconfig_source }}
          vault_addr: ${{ vars.vault_addr }}
          vault_token: ${{ env.VAULT_TOKEN }}
          vault_k8s_role_path: ${{ vars.vault_k8s_role_path }}
          aws_region: ${{ vars.aws_region }}
          aws_eks_cluster: ${{ vars.aws_eks_cluster }}
          azure_resource_group: ${{ vars.azure_resource_group }}
          azure_aks_cluster: ${{ vars.azure_aks_cluster }}
      - uses: ptonini/gha-create-helm-release-files@main
        id: releases
        with:
          environment: ${{ inputs.environment  }}
          digest: ${{ inputs.digest }}
          container_registry: ${{ vars.container_registry }}
          manifest_file: ${{ vars.manifest_file }}
          manifest_macros: ${{ vars.manifest_macros }}
          rp_manifest_file: ${{ vars.rp_manifest_file }}
          staging_domain: ${{ vars.staging_domain }}
          github_token: ${{ secrets.GH_READER_TOKEN }}
      - uses: ptonini/gha-deploy-helm-releases@main
        with:
          releases: ${{ steps.releases.outputs.releases }}
      - uses: thollander/actions-comment-pull-request@v2
        if: github.event_name == 'pull_request'
        with:
          message: ${{ steps.releases.outputs.message }}
    outputs:
      staging_host: ${{ steps.releases.outputs.staging_host }}
