name: publish-docker-image

on:
  workflow_call:
    inputs:
      path:
        description: ''
        required: false
        default: ${{ github.workspace }}
        type: string
      tags:
        description: ''
        required: true
        type: string
      registry:
        description: ''
        required: false
        default: ghcr.io
        type: string
    secrets:
      REGISTRY_USERNAME:
        description: ''
        required: false
      REGISTRY_PASSWORD:
        description: ''
        required: false
      BUILD_USERNAME:
        description: ''
        required: false
      BUILD_PASSWORD:
        description: ''
        required: false
    outputs:
      checksum:
        description: ''
        value: ${{ jobs.publish_docker_image.outputs.checksum }}
    
jobs:
  publish_docker_image:
    runs-on: ubuntu-latest
    outputs:
      checksum: ${{ steps.checksum.outputs.checksum }}
    steps:
      - run: env | sort
      - uses: actions/checkout@main
      - uses: ptonini/gha-load-metadata@main
      - run: echo "REGISTRY_USERNAME=$([[ -n "${{ secrets.REGISTRY_USERNAME }}" ]] && echo "${{ secrets.REGISTRY_USERNAME }}" || echo "${{ github.actor }}")" >> $GITHUB_ENV
      - run: echo "REGISTRY_PASSWORD=$([[ -n "${{ secrets.REGISTRY_PASSWORD }}" ]] && echo "${{ secrets.REGISTRY_PASSWORD }}" || echo "${{ secrets.GITHUB_TOKEN }}")" >> $GITHUB_ENV
      - run: echo "BUILD_USERNAME=$([[ -n "${{ secrets.BUILD_USERNAME }}" ]] && echo "${{ secrets.BUILD_USERNAME }}" || echo "${{ github.actor }}")" >> $GITHUB_ENV
      - run: echo "BUILD_PASSWORD=$([[ -n "${{ secrets.BUILD_PASSWORD }}" ]] && echo "${{ secrets.BUILD_PASSWORD }}" || echo "${{ secrets.GITHUB_TOKEN }}")" >> $GITHUB_ENV
      - uses: docker/login-action@v1
        with:
          registry: ${{ inputs.registry }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}
      - run: docker build ${{ inputs.path }} -t ${DOCKER_IMAGE_NAME} --build-arg BUILD_USERNAME=${BUILD_USERNAME} --build-arg BUILD_PASSWORD=${BUILD_PASSWORD}
      - run: for TAG in ${{ inputs.tags }}; do docker tag ${DOCKER_IMAGE_NAME} ${DOCKER_IMAGE_NAME}:${TAG} && docker push ${DOCKER_IMAGE_NAME}:${TAG}; done
      - run: echo "::set-output name=checksum::$(docker inspect --format='{{index .RepoDigests 0}}' "${DOCKER_IMAGE_NAME}" | cut -d ':' -f 2)"
        id: checksum
