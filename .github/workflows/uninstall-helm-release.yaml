name: uninstall-helm-release

on:
  workflow_call:
    secrets:
      OPENVPN_CONFIG:
        description: ''
        required: true

jobs:
  uninstall_helm_release:
    runs-on: ubuntu-latest
    env:
      KUBECONFIG: ${{ github.workspace }}/.kube/config
    steps:
      - run: env | sort
      - run: cat ${GITHUB_EVENT_PATH}
      - uses: ptonini/gha-openvpn@main
        with:
          openvpn_config: ${{ secrets.OPENVPN_CONFIG }}
          validation_addr: ${{ vars.ovpn_validation_addr }}
      - uses: ptonini/gha-get-kubeconfig@main
        with:
          kubeconfig_source: ${{ vars.kubeconfig_source }}
          vault_addr: ${{ vars.vault_addr }}
          vault_method: ${{ vars.vault_method }}
          vault_path: ${{ vars.vault_path }}
          vault_role: ${{ vars.vault_role }}
          vault_k8s_role_path: ${{ vars.vault_k8s_role_path }}
          aws_region: ${{ vars.aws_region }}
          aws_role: ${{ vars.aws_role }}
          aws_eks_cluster: ${{ vars.aws_eks_cluster }}
          azure_tenant_id: ${{ vars.azure_tenant_id }}
          azure_subscription_id: ${{ vars.azure_subscription_id }}
          azure_client_id: ${{ vars.azure_client_id }}
          azure_resource_group: ${{ vars.azure_resource_group }}
          azure_aks_cluster: ${{ vars.azure_aks_cluster }}
      - uses: ptonini/gha-create-helm-release-files@main
        id: releases
        with:
          container_registry: ${{ vars.container_registry }}
          manifest_file: ${{ vars.manifest_file }}
          rp_manifest_file: ${{ vars.rp_manifest_file }}
          staging_domain: ${{ vars.staging_domain }}
      - uses: ptonini/gha-uninstall-helm-releases@main
        with:
          releases: ${{ steps.releases.outputs.releases }}