name: deploy-frontend

on:
  workflow_call:
    inputs:
      version:
        description: ''
        required: true
        type: string
      artifact:
        description: ''
        required: true
        type: string
    secrets:
      OPENVPN_CONFIG:
        description: ''
        required: true

        
jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
    steps:
      - run: env | sort
      - uses: actions/checkout@v3
      - uses: ptonini/gha-openvpn@main
        with:
          openvpn_config: ${{ secrets.OPENVPN_CONFIG }}
          validation_addr: ${{ vars.vault_addr }}
      - uses: hashicorp/vault-action@v2.4.3
        with:
          url: ${{ vars.vault_addr }}
          method: ${{ vars.vault_method }}
          path: ${{ vars.vault_path }}
          role: ${{ vars.vault_role }}
          secrets: |
            ${{ vars.vault_aws_role_path }} access_key | AWS_ACCESS_KEY_ID;
            ${{ vars.vault_aws_role_path }} secret_key | AWS_SECRET_ACCESS_KEY;
            ${{ vars.vault_aws_role_path }} security_token | AWS_SESSION_TOKEN;
      - uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/v${{ inputs.version }}
          file: ${{ inputs.artifact }}
          target: ./${{ inputs.artifact }}
      - run: tar xzvf ${{ inputs.artifact }}
      - run: aws s3 sync --delete --acl public-read build "s3://${{ vars.cloudfront_bucket }}/www"
      - run: |
          for I in $(jq -c '.[]' <<< "${{ vars.custom_types }}"); do
            OBJECT=$(jq -r '.object' <<< "${I}")
            aws s3api put-object --bucket ${{ vars.cloudfront_bucket }} --key www/${OBJECT} --body build/${OBJECT} --content-type $(jq -r '."content-type"' <<< "${I}") --acl public-read
          done
      - run: aws cloudfront create-invalidation --distribution-id ${{ vars.cloudfront_distribution }} --paths "/*"