name: deploy

concurrency:
  group: ${{ github.event_name }}

on:
  push:
    branches:
      - master
      - main
      - legacy/*
    paths-ignore:
      - manifest.yaml
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
    branches:
      - master
      - main
      - legacy/*

jobs:
  release_please:
    uses: ptonini/gha-workflows/.github/workflows/release-please.yaml@main
    if: github.event_name == 'push'
  
  startup:
    uses: ptonini/gha-workflows/.github/workflows/startup.yaml@main
    if: (!contains(github.event.pull_request.head.ref, 'release-please--'))
    secrets: inherit
  
  publish_candidate:
    uses: ptonini/gha-workflows/.github/workflows/publish-docker-image.yaml@main
    if: needs.startup.outputs.publish_candidate == 'true'
    needs:
      - startup
    with:
      repository: ${{ needs.startup.outputs.docker_repository }}
      tags: ${{ format('latest pr{0}', github.event.number) }}
    secrets:
      BUILD_ARGUMENTS: --build-arg BUILD_USERNAME=${{ github.actor }} --build-arg BUILD_PASSWORD=${{ secrets.GH_PACKAGES_TOKEN }}
  create_staging:
    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main
    if: needs.startup.outputs.create_staging == 'true'
    needs:
      - startup
      - publish_candidate
    with:
      checksum: ${{ needs.publish_candidate.outputs.checksum }}
    secrets: inherit

  destroy_staging:
    uses: ptonini/gha-workflows/.github/workflows/destroy-staging.yaml@main
    if: needs.startup.outputs.destroy_staging == 'true'
    needs:
      - startup
    secrets: inherit
  
  approve_candidate:
    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main
    if: needs.startup.outputs.approve_candidate == 'true'
    needs:
      - startup
    with:
      source_tag: ${{ format('pr{0}', github.event.pull_request.number) }}
      tag: pr-approved
  
  promote_candidate:
    uses: ptonini/gha-workflows/.github/workflows/retag-docker-image.yaml@main
    if: needs.startup.outputs.promote_candidate == 'true'
    needs:
      - startup
    with:
      source_tag: pr-approved
      tag: ${{ needs.startup.outputs.release_version }}
  deploy_to_production:
    uses: ptonini/gha-workflows/.github/workflows/deploy-helm-releases.yaml@main
    needs:
      - promote_candidate
    secrets: inherit
  
  unit_tests:
    uses: ptonini/gha-workflows/.github/workflows/unit-tests.yaml@main
    if: needs.startup.outputs.skip_tests == 'false'
    needs:
      - startup
  quality_scan:
    uses: ptonini/gha-workflows/.github/workflows/sonarcloud.yaml@main
    needs:
      - unit_tests
    secrets: inherit
  
  code_linting:
    uses: ptonini/gha-workflows/.github/workflows/code-linting.yaml@main
    if: needs.startup.outputs.housekeeping == 'true'
    needs:
      - startup
  security_leaks_scan:
    uses: ptonini/gha-workflows/.github/workflows/trufflehog.yaml@main
    if: needs.startup.outputs.housekeeping == 'true'
    needs:
      - startup