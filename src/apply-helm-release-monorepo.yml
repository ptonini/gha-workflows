name: apply

on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - '.github/**'
      - '*/*'

permissions:
  id-token: write
  contents: read

jobs:
  detect_changes:
    uses: ptonini/gha-workflows/.github/workflows/detect-changes.yaml@main
  
  apply_releases:
    runs-on: ubuntu-latest
    if: needs.detect_changes.outputs.changes != '[]'
    needs:
      - detect_changes
    strategy:
      matrix:
        release: ${{ fromJSON(needs.detect_changes.outputs.changes) }}
    steps:
      - run: env | sort
      - uses: actions/checkout@v3
      - run: echo "ENVIRONMENT=$(echo ${{ matrix.release }} | awk -F/ '{print $1}')" | tee -a $GITHUB_ENV
      - run: echo "NAMESPACE=$(echo ${{ matrix.release }} | awk -F/ '{print $2}')" | tee -a $GITHUB_ENV
      - run: echo "RELEASE=$(echo ${{ matrix.release }} | awk -F/ '{print $3}')" | tee -a $GITHUB_ENV
      - run: echo "VAULT_K8S_ROLE_PATH=$(echo '${{ secrets.ORG_CONFIG }}' | jq -r '.environments.'${ENVIRONMENT}'.k8s_role_path')" | tee -a $GITHUB_ENV
      - uses: ptonini/gha-openvpn@main
        with:
          openvpn_config: ${{ secrets.OPENVPN_CONFIG }}
          validation_addr: ${{ secrets.VAULT_ADDR }}
      - uses: hashicorp/vault-action@v2.4.3
        with:
          method: jwt
          role: workflow
          path: oidc/github
          url: ${{ secrets.VAULT_ADDR }}
          secrets: ${{ env.VAULT_K8S_ROLE_PATH }} kube_config | KUBECONFIG_CONTENT;
      - uses: ptonini/gha-deploy-helm-releases@main
        with:
          base_dir: ${{ github.workspace }}/${{ env.ENVIRONMENT }}/${{ env.NAMESPACE }}
          kubeconfig_content: ${{ env.KUBECONFIG_CONTENT }}
          releases: ${{ env.RELEASE }}